## MOST SECURE WAY TO REQUIRE SSL
# http://www.askapache.com/htaccess/apache-ssl-in-htaccess-examples.html
#SSLOptions +StrictRequire
#SSLRequireSSL
#SSLRequire %{HTTP_HOST} eq "askapache.com"
#ErrorDocument 403 https://askapache.com

# START - Disable server signature #
    #ServerTokens Prod
    ServerSignature Off
# END - Disable server signature #


SetEnv FIREWALL_LOG logs/firewall.log
SetEnv SERVICE_LOG logs/services.log
SetEnv NEWS_FILE rss/News.json
SetEnv TRENDING_FILE rss/Trending.json
SetEnv DIY_FILE rss/DIY.json
SetEnv SERVER_ADMIN kaoschuks@gmail.com


# No cache for php-files
<FilesMatch "\.(php)$">
    <IfModule mod_expires.c>
        ExpiresActive Off
    </IfModule>
    <IfModule mod_headers.c>
        Header set Cache-Control "private, no-cache, no-store, proxy-revalidate, no-transform"
    </IfModule>
</FilesMatch>
# END CACHING

# ADD VALUES FROM HTTP HEADERS
SetEnvIfNoCase ^If-Modified-Since$ "(.+)" HTTP_IF_MODIFIED_SINCE=$1
SetEnvIfNoCase ^If-None-Match$ "(.+)" HTTP_IF_NONE_MATCH=$1
SetEnvIfNoCase ^Cache-Control$ "(.+)" HTTP_CACHE_CONTROL=$1
SetEnvIfNoCase ^Connection$ "(.+)" HTTP_CONNECTION=$1
SetEnvIfNoCase ^Keep-Alive$ "(.+)" HTTP_KEEP_ALIVE=$1
SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1

<LimitExcept GET POST>
    Order allow,deny
</LimitExcept>

#ErrorDocument 403 %{REQUEST_SCHEME}://%{HTTP_HOST}%{REQUEST_URI}403
#ErrorDocument 404 %{REQUEST_SCHEME}://%{HTTP_HOST}%{REQUEST_URI}404
#ErrorDocument 500 %{REQUEST_SCHEME}://%{HTTP_HOST}%{REQUEST_URI}500
#ErrorDocument 401 %{REQUEST_SCHEME}://%{HTTP_HOST}%{REQUEST_URI}401

<FilesMatch "\.php$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

<Files Framework.php>
    Order Allow,Deny
    Allow from all
</Files>

<Files .*>
    Order Allow,Deny
    Deny from all
</Files>

<Files .log>
    Order Allow,Deny
    Allow from localhost
</Files>


### ASKAPACHE MOD_SECURITY ###
<IfModule mod_security.c>
   # Turn the filtering engine On or Off or DynamicOnly for cgi/php/etc
    SecFilterEngine On

    # Only log suspicious requests
    SecAuditEngine RelevantOnly

    # Goes up to 9 but at 2 its overwhelming trust me
    SecFilterDebugLevel 0

    # Make sure that URL encoding is valid
    SecFilterCheckURLEncoding On

    # Unicode encoding check
    SecFilterCheckUnicodeEncoding Off

    # Should mod_security inspect POST payloads
    SecFilterScanPOST On

    # The default rule to apply to inherited rules
    SecFilterDefaultAction "deny,log,status:500"
</IfModule>


<IfModule mod_php5.c>
    php_value zlib.output_compression 16386
    php_value zlib.output_compression On
    php_value zlib.output_compression_level 6
    php_value upload_max_filesize 10M
    php_value post_max_size 1M
    php_value Server Kaos.com
    php_value memory_limit 32M
    php_value max_input_time 30
    php_value max_execution_time 30
    php_value file_uploads On
    php_flag apc.cache_by_default On
    php_flag magic_quotes_gpc Off 
    php_flag magic_quotes_runtime Off
    php_flag register_globals Off
    php_value allow_url_fopen Off
    php_value allow_url_include Off
    php_flag output_buffering On
    
    #register_long_arrays = Off
    #session.gc_divisor = 1000
    #session.hash_bits_per_character = 5
    #session.gc_maxlifetime = 7200
    #short_open_tag = Off
    #track_errors = Off
    #variables_order = "GPCS"
    #log_errors = On
    #register_argc_argv = On
    #default_socket_timeout = 15
    #session.save_path = "/tmp"
    #mysql.allow_persistent = Off
    #memory_limit = 64M
    
    # Rename session cookie to something else, than PHPSESSID
    #php_value session.name Kaos
    # Do not show you are using PHP
    # Note: Move this line to php.ini since it wont work in .htaccess
    php_flag expose_php Off

    # Level of log detail - log all errors
    php_value error_reporting -1
    # Write errors to log file
    php_flag log_errors On
    # Do not display errors in browser (production - Off, development - On)
    php_flag display_errors On
    # Do not display startup errors (production - Off, development - On)
    php_flag display_startup_errors On
    # Format errors in plain text
    # Note: Leave this setting 'On' for xdebug is var_dump() output
    php_flag html_errors On
    # Show multiple occurrence of error
    php_flag ignore_repeated_errors On
    # Show same errors from different sources
    php_flag ignore_repeated_source On
    # Size limit for error messages
    php_value log_errors_max_len 1024
    # Don not precede error with string (does not accept empty string, use whitespace if you need)
    php_value error_prepend_string " "
    # Don not prepend to error (does not accept empty string, use whitespace if you need)
     php_value error_append_string " "
</IfModule>

<Files ~ "^\w+\.(gif|jpe?g|png)$">
    order deny,allow     
    allow from localhost     
</Files>

# Disable directory browsing
Options All -Indexes

# Creatin compression in server
<IfModule mod_gzip.c>
    mod_gzip_on Yes
    mod_gzip_dechunk Yes
    mod_gzip_item_include file \.(html?|xml|txt|css|js)$
    mod_gzip_item_include handler ^cgi-script$mod_gzip_item_include mime ^text/.*
    mod_gzip_item_include mime ^application/x-javascript.*
    mod_gzip_item_exclude mime ^image/.*
    mod_gzip_item_exclude rspheader ^Content-Encoding:.*gzip.*
</IfModule>

# Use Mod_deflate to compress static files
<ifmodule mod_deflate.c>
    <filesmatch ".(js|css|ico|txt|htm|html|php)$">
        SetOutputFilter DEFLATE
    </filesmatch>
</ifmodule>

# Speed up caching
FileETag MTime Size

<IfModule mod_deflate.c>
    # Enable compression# Enable compression
        #AddOutputFilterByType DEFLATE text/plain
        #AddOutputFilterByType DEFLATE text/html
        #AddOutputFilterByType DEFLATE text/xml
        #AddOutputFilterByType DEFLATE text/css
        #AddOutputFilterByType DEFLATE text/javascript
        #AddOutputFilterByType DEFLATE application/xml
        #AddOutputFilterByType DEFLATE application/xhtml+xml
        #AddOutputFilterByType DEFLATE application/rss+xml
        #AddOutputFilterByType DEFLATE application/javascript
        #AddOutputFilterByType DEFLATE application/x-javascript
        
    <IfModule mod_setenvif.c>
        BrowserMatch ^Mozilla/4 gzip-only-text/html
        BrowserMatch ^Mozilla/4\.0[678] no-gzip
        BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
        BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html
    </IfModule>
</IfModule>

BrowserMatch "MSIE" brokenvary=1
BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
BrowserMatch "Opera" !brokenvary
SetEnvIf brokenvary 1 force-no-vary

#Change the default page
DirectoryIndex Framework.php

# Forbid Proxies ^
# Denies any POST Request using a Proxy Server. Can still access site, but not comment. http://perishablepress.com/press/2008/04/20/how-to-block-proxy-servers-via-htaccess/
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP:VIA}%{HTTP:FORWARDED}%{HTTP:USERAGENT_VIA}%{HTTP:X_FORWARDED_FOR}%{HTTP:PROXY_CONNECTION} !^$ [OR]
RewriteCond %{HTTP:XPROXY_CONNECTION}%{HTTP:HTTP_PC_REMOTE_ADDR}%{HTTP:HTTP_CLIENT_IP} !^$
RewriteRule .* - [F,NS,L]

# HTTP PROTOCOL ^
# Denies any badly formed HTTP PROTOCOL in the request, 0.9, 1.0, and 1.1 only
RewriteCond %{THE_REQUEST} !^[A-Z]{3,9}\ .+\ HTTP/(0\.9|1\.0|1\.1) [NC]
RewriteRule .* - [F,NS,L]

# SPECIFY CHARACTERS ^
# Denies any request for a url containing characters other than "a-zA-Z0-9.+/-?=&" - REALLY helps but may break your site depending on your links.
RewriteCond %{THE_REQUEST} !^[A-Z]{3,9}\ [a-zA-Z0-9\.\+_/\-\?\=\&]+\ HTTP/ [NC]
RewriteRule .* - [F,NS,L]

# BAD Content Length ^
# Denies any POST request that doesnt have a Content-Length Header
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP:Content-Length} ^$
RewriteRule .* - [F,NS,L]

# BAD Content Type ^
# Denies any POST request with a content type other than application/x-www-form-urlencoded|multipart/form-data
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP:Content-Type} !^(application/x-www-form-urlencoded|multipart/form-data.*(boundary.*)?)$ [NC]
RewriteRule .* - [F,NS,L]

# BAD X_CSRF_TOKEN ^
# Denies any POST request with a X_CSRF_TOKEN
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP:X_CSRF_TOKEN} ^$
RewriteRule .* - [F,NS,L]

# Missing HTTP_HOST ^
# Denies requests that dont contain a HTTP HOST Header.
RewriteCond %{HTTP_HOST} ^$
RewriteRule .* - [F,NS,L]

# Bogus Graphics Exploit ^
# Denies obvious exploit using bogus graphics
RewriteCond %{HTTP:Content-Disposition} \.php [NC]
RewriteCond %{HTTP:Content-Type} image/.+ [NC]
RewriteRule .* - [F,NS,L]

# No UserAgent, Not POST ^
# Denies POST requests by blank user-agents. May prevent a small number of visitors from POSTING.
RewriteCond %{REQUEST_METHOD} =POST
RewriteCond %{HTTP_USER_AGENT} ^-?$
RewriteRule .* - [F,NS,L]

# activating rewrite and routing
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # If we receive a forwarded http request from a proxy...
    #RewriteCond %{HTTP:X-Forwarded-Proto} =http [OR]

    # ...or just a plain old http request directly from the client
    #RewriteCond %{HTTP:X-Forwarded-Proto} =""
    #RewriteCond %{HTTPS} !=on

    # Redirect to https version
    #RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    #RewriteCond %{HTTP:X-Forwarded-Proto} !https
    #RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
        
    RewriteBase /framework/
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^(.+)$ ?uri=$1 [QSA,L]
    
    RewriteCond %{REQUEST_URI} ^/([0-9]+)$
    RewriteRule .*/Blog/?title=%1&category=%2 [R=301,L]
    
    RewriteCond %{HTTP_REFERER} !^http://(www\.)?localhost/framework/ [NC] 
    RewriteRule \.(jpe?g|gif|bmp|png)$ - [F,NC]

    # Block suspicious request methods
    
    RewriteCond %{REQUEST_METHOD} ^(HEAD|TRACE|DELETE|TRACK|DEBUG) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    ## Remove Bad Bots from crawling ##
    # IF THE UA STARTS WITH THESE
    # Block spambots
    #
    RewriteCond %{HTTP_USER_AGENT} ^(aesop_com_spiderman|alexibot|backweb|bandit|batchftp|bigfoot) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(black.?hole|blackwidow|blowfish|botalot|buddy|builtbottough|bullseye) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(cheesebot|cherrypicker|chinaclaw|collector|copier|copyrightcheck) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(cosmos|crescent|curl|custo|da|diibot|disco|dittospyder|dragonfly) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(drip|easydl|ebingbong|ecatch|eirgrabber|emailcollector|emailsiphon) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(emailwolf|erocrawler|exabot|eyenetie|filehound|flashget|flunky) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(frontpage|getright|getweb|go.?zilla|go-ahead-got-it|gotit|grabnet) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(grafula|harvest|hloader|hmview|httplib|httrack|humanlinks|ilsebot) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(infonavirobot|infotekies|intelliseek|interget|iria|jennybot|jetcar) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(joc|justview|jyxobot|kenjin|keyword|larbin|leechftp|lexibot|lftp|libweb) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(likse|linkscan|linkwalker|lnspiderguy|lwp|magnet|mag-net|markwatch) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(mata.?hari|memo|microsoft.?url|midown.?tool|miixpc|mirror|missigua) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(mister.?pix|moget|mozilla.?newt|nameprotect|navroad|backdoorbot|nearsite) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(net.?vampire|netants|netcraft|netmechanic|netspider|nextgensearchbot) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(attach|nicerspro|nimblecrawler|npbot|octopus|offline.?explorer) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(offline.?navigator|openfind|outfoxbot|pagegrabber|papa|pavuk) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(pcbrowser|php.?version.?tracker|pockey|propowerbot|prowebwalker) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(psbot|pump|queryn|recorder|realdownload|reaper|reget|true_robot) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(repomonkey|rma|internetseer|sitesnagger|siphon|slysearch|smartdownload) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(snake|snapbot|snoopy|sogou|spacebison|spankbot|spanner|sqworm|superbot) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(superhttp|surfbot|asterias|suzuran|szukacz|takeout|teleport) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(telesoft|the.?intraformant|thenomad|tighttwatbot|titan|urldispatcher) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(turingos|turnitinbot|urly.?warning|vacuum|vci|voideye|whacker) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^(libwww-perl|widow|wisenutbot|wwwoffle|xaldon|xenu|zeus|zyborg|anonymouse) [NC,OR]
    #
    ## STARTS WITH WEB
    #
    RewriteCond %{HTTP_USER_AGENT} ^web(zip|emaile|enhancer|fetch|go.?is|auto|bandit|clip|copier|master|reaper|sauger|site.?quester|whack) [NC,OR]
    #
    ## ANYWHERE IN UA -- GREEDY REGEX
    #
    RewriteCond %{HTTP_USER_AGENT} ^.*(craftbot|download|extract|stripper|sucker|ninja|clshttp|webspider|leacher|collector|grabber|webpictures).*$ [NC]
    #
    ## ISSUE 403 / SERVE ERRORDOCUMENT
    #
    RewriteRule . - [F,L]
    #
    ## Useragents starting with
    #
    RewriteCond %{HTTP_USER_AGENT} ^atraxbot [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^Azureus [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^geohasher [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^PycURL [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^Python-urllib [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^research-scan-bot [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^Sosospider [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^Wget [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^xenu [NC,OR]
    #
    ## User agents contains string
    #
    RewriteCond %{HTTP_USER_AGENT} ^.*casper [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^.*goblox [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^.*sun4u [NC]
    RewriteRule ^(.*)$ - [F]
    #
    ## Disable blank UA
    ## Blank UA and Referer
    #
    RewriteCond %{HTTP_REFERER} ^$ [NC]
    RewriteCond %{HTTP_USER_AGENT} ^$ [NC]
    RewriteRule .* - [F,L]
    #
    ## Prevent use of specified methods in HTTP Request
    #
    RewriteCond %{REQUEST_METHOD} ^(HEAD|TRACE|DELETE|TRACK) [NC,OR]
    #
    ## Block out use of illegal or unsafe characters in the HTTP Request
    #
    RewriteCond %{THE_REQUEST} ^.*(\\r|\\n|%0A|%0D).* [NC,OR]
    #
    ## Block out use of illegal or unsafe characters in the Referer Variable of the HTTP Request
    RewriteCond %{HTTP_REFERER} ^(.*)(<|>|'|'|%0A|%0D|%27|%3C|%3E|%00).* [NC,OR]
    ## Block out use of illegal or unsafe characters in any cookie associated with the HTTP Request
    #
    RewriteCond %{HTTP_COOKIE} ^.*(<|>|'|'|%0A|%0D|%27|%3C|%3E|%00).* [NC,OR]
    #
    ## Block out use of illegal characters in URI or use of malformed URI
    #
    RewriteCond %{REQUEST_URI} ^/(,|;|:|<|>|">|"<|/|\\\.\.\\).{0,9999}.* [NC,OR]
    #
    ## Block out  use of empty User Agent Strings
    ## NOTE - disable this rule if your site is integrated with Payment Gateways such as PayPal
    ## RewriteCond %{HTTP_USER_AGENT} ^$ [OR]
    ## Block out  use of illegal or unsafe characters in the User Agent variable
    #
    RewriteCond %{HTTP_USER_AGENT} ^.*(<|>|'|'|%0A|%0D|%27|%3C|%3E|%00).* [NC,OR]
    #
    ## Measures to block out  SQL injection attacks
    #
    RewriteCond %{QUERY_STRING} ^.*(;|<|>|'|"|"|'|\)|%0A|%0D|%22|%27|%3C|%3E|%00).*(/\*|union|select|insert|cast|set|declare|drop|update|md5|benchmark).* [NC,OR]
    #
    ## Block out  reference to localhost/loopback/127.0.0.1 in the Query String
    #
    RewriteCond %{QUERY_STRING} ^.*(localhost|loopback|127\.0\.0\.1).* [NC,OR]
    #
    ## Block out  use of illegal or unsafe characters in the Query String variable
    #
    RewriteCond %{QUERY_STRING} ^.*(<|>|'|'|%0A|%0D|%27|%3C|%3E|%00).* [NC]
    #
    ########## Begin - File injection protection, by SigSiu.net
    RewriteCond %{REQUEST_METHOD} GET
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http:// [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=(\.\.//?)+ [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ [NC]
    RewriteRule .* - [F]
    ########## End - File injection protection
    #
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http%3A%2F%2F [OR]
    #
    # proc/self/environ? no way!
    #
    RewriteCond %{QUERY_STRING} proc\/self\/environ [NC,OR]
    #
    ## PHP-CGI Vulnerability
    #
    RewriteCond %{QUERY_STRING} ^(%2d|\-)[^=]+$ [NC]
    RewriteRule (.*) - [F,L]
    
    RewriteCond %{REQUEST_URI}  (mssqlil|register).php [NC,OR]
	RewriteCond %{REQUEST_URI}  (img|thumb|thumb_editor|thumbopen).php [NC,OR]
	RewriteCond %{QUERY_STRING} (img|thumb|thumb_editor|thumbopen).php [NC,OR]
	RewriteCond %{REQUEST_URI}  revslider [NC,OR]
	RewriteCond %{QUERY_STRING} revslider [NC]
	RewriteRule .* - [F,L]
</IfModule>

#AuthType Basic
#AuthName 'Authentication required'
#AuthUserFile /var/www/API/enterprise/.htpasswd

#Restrict access to secure url
#SetEnvIf Request_URI ^/API/enterprise/Webapp auth=1

#<RequireAll>
    # require the auth variable to be set
    #Require env auth
    # require a valid user
    #Require valid-user
#</RequireAll>


# BEGIN Expire headers
<ifModule mod_expires.c>
  ExpiresActive On
  ExpiresDefault "access plus 5 seconds"
  ExpiresByType image/x-icon "access plus 2592000 seconds"
  ExpiresByType image/jpeg "access plus 2592000 seconds"
  ExpiresByType image/png "access plus 2592000 seconds"
  ExpiresByType image/gif "access plus 2592000 seconds"
  ExpiresByType application/x-shockwave-flash "access plus 2592000 seconds"
  ExpiresByType text/css "access plus 604800 seconds"
  ExpiresByType text/javascript "access plus 216000 seconds"
  ExpiresByType application/javascript "access plus 216000 seconds"
  ExpiresByType application/x-javascript "access plus 216000 seconds"
  ExpiresByType text/html "access plus 600 seconds"
  ExpiresByType application/xhtml+xml "access plus 600 seconds"
</ifModule>
# END Expire headers


# ----------------------------------------------------------------------
# Better website experience for IE users. We care of them LOL
# ----------------------------------------------------------------------
<IfModule mod_headers.c>
  Header set X-UA-Compatible "IE=Edge,chrome=1"
  # mod_headers cannnot match by content-type, but we don't want to send this header on *everything*...
  <FilesMatch "\.(js|css|gif|png|jpe?g|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|oex|xpi|safariextz|vcf)$" >
    Header unset X-UA-Compatible
  </FilesMatch>
</IfModule>


# ----------------------------------------------------------------------
# Cross-domain AJAX requests, ENABLE CSRF first (see above)
# ----------------------------------------------------------------------
# Serve cross-domain Ajax requests, disabled by default. Enable-cors.org
# code.google.com/p/html5security/wiki/CrossOriginRequestSecurity
  <IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Max-Age "86400"
    Header set Access-Control-Allow-Headers "Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control"
    Header set Access-Control-Allow-Credentials "True"
    Header set Access-Control-Allow-Methods "OPTIONS, GET, POST"
  </IfModule>



# ----------------------------------------------------------------------
# CORS-enabled images (@crossorigin)
# ----------------------------------------------------------------------
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    # mod_headers, y u no match by Content-Type?!
    <FilesMatch "\.(gif|png|jpe?g|svg|svgz|ico|webp)$">
      SetEnvIf Origin ":" IS_CORS
      Header set Access-Control-Allow-Origin "*" env=IS_CORS
    </FilesMatch>
  </IfModule>
</IfModule>

# BEGIN Cache-Control Headers
<ifModule mod_headers.c>

    # X-Powered-By hidden by default nobody will notice if you're using PHP or ASP or whatever
    Header unset X-Powered-By
    # Set by default UTF-8 charset
    AddDefaultCharset UTF-8
    # ITALIAN language for this files, change it for your needs
    #AddLanguage it-IT .html .htm .css .js
    # Set the default charset for every feed methods
    AddCharset utf-8 .atom .css .js .json .rss .vtt .xml
    # drop Range header when more than 5 ranges. CVE-2011-3192
    SetEnvIf Range (,.*?){5,} bad-range=1
    RequestHeader unset Range env=bad-range
    # LIMIT UPLOAD FILE SIZE TO PROTECT AGAINST DOS ATTACK. Bytes, 0-2147483647(2GB)
    LimitRequestBody 2147483647
    

    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block" 
    Header always set X-Content-Type-Options "nosniff" 
    Header set X-Webkit-CSP "allow 'self'; media-src *; img-src *; font-src *; script-src 'self'; style-src 'self';" 
    Header set X-Webkit-Content-Security-Policy "allow 'self'; media-src *; img-src *; font-src *; script-src 'self'; style-src 'self';"
    Header set X-Content-Security-Policy "allow 'self'; media-src *; img-src *; font-src *; script-src 'self'; style-src 'self';"
    Header always set Content-Security-Policy "allow 'self'; media-src *; img-src *; font-src *; script-src 'self'; style-src 'self';"
    Header always set X-Content-Type-Options "nosniff"
    Header set ServerSignature "Off"
    Header always set ServerTokens "Prod"
    Header set Server "Kaos.com"
    # Control Cross-Domain Policies
    Header set X-Permitted-Cross-Domain-Policies "master-only"
    Header always set Strict-Transport-Security "max-age=10886400; includeSubDomains; preload" env=HTTPS
    
    Header set Set-Cookie HttpOnly;Secure
    Header unset Cookie
    #Header unset Set-Cookie

    # Make sure proxies deliver correct content
    Header append Vary User-Agent env=!dont-vary
    # Ensure proxies deliver compressed content correctly
    Header append Vary Accept-Encoding

  <FilesMatch "\.(ico|jpe?g|png|gif)$">
    Header set Cache-Control "private, no-transform, max-age=31536000"
  </FilesMatch>
  <filesMatch "\.(css)$">
    Header set Cache-Control "private"
  </filesMatch>
  <filesMatch "\.(js)$">
    Header set Cache-Control "private"
  </filesMatch>
  <filesMatch "\.(x?html?|php)$">
    Header set Cache-Control "private, must-revalidate"
  </filesMatch>
</ifModule>
# END Cache-Control Headers


#
# ----------------------------------------------------------------------
# A little more security
# ----------------------------------------------------------------------
# To avoid displaying the exact version number of Apache being used, add the
# following to httpd.conf (it will not work in .htaccess):
# ServerTokens Prod
IndexIgnore *
# "-Indexes" will have Apache block users from browsing folders without a
# default document Usually you should leave this activated, because you
# should not allow everybody to surf through every folder on your server (which
# includes rather private places like CMS system folders).
<IfModule mod_autoindex.c>
  Options -Indexes
  Options -ExecCGI
</IfModule>
# Block access to "hidden" directories or files whose names begin with a
# period. This includes directories used by version control systems such as
# Subversion or Git.
<IfModule mod_rewrite.c>
  RewriteCond %{SCRIPT_FILENAME} -d [OR]
  RewriteCond %{SCRIPT_FILENAME} -f
  RewriteRule "(^|/)\." - [F]
</IfModule>
# Block access to backup and source files. These files may be left by some
# text/html editors and pose a great security danger, when anyone can access
# them.
<FilesMatch "(\.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$">
  Order allow,deny
  Deny from all
  Satisfy All
</FilesMatch>
AddHandler cgi-script .pl .py .asp .shtml .sh .cgi
# optional logging.
# CustomLog insert-path-and-name-of-log common env=bad-range
# If your server is not already configured as such, the following directive
# should be uncommented in order to set PHP is register_globals option to OFF.
# This closes a major security hole that is abused by most XSS (cross-site
# scripting) attacks. For more information: http://php.net/register_globals
#
